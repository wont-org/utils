(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{407:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"开发指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发指南"}},[t._v("#")]),t._v(" 开发指南")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("参与"),a("code",[t._v("zero-utils")]),t._v("函数库开发之前，您需要了解 "),a("a",{attrs:{href:"https://www.tslang.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commit 规范"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://jestjs.io/docs/en/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("jest"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://jsdoc.app/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jsdoc"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"函数设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数设计"}},[t._v("#")]),t._v(" 函数设计")]),t._v(" "),a("p",[t._v("首先创建一个"),a("code",[t._v("issue")]),t._v("，说明函数功能，模板如下：")]),t._v(" "),a("ul",[a("li",[t._v("函数名称")]),t._v(" "),a("li",[t._v("功能描述、解决痛点")]),t._v(" "),a("li",[t._v("入参说明")]),t._v(" "),a("li",[t._v("返回参数说明")]),t._v(" "),a("li",[t._v("实现方案、系统分析")])]),t._v(" "),a("p",[t._v("函数功能、系统分析得到认可后，开始开发。")]),t._v(" "),a("h2",{attrs:{id:"分支策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支策略"}},[t._v("#")]),t._v(" 分支策略")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("分支策略遵循"),a("code",[t._v("angular commit")]),t._v("规范，示例如下。")])]),t._v(" "),a("ul",[a("li",[t._v("master: 受保护、稳定且经过测试的分支，也是主迭代分支。代码必须提"),a("code",[t._v("pull request")]),t._v("并且"),a("code",[t._v("code review")]),t._v("后，联系仓库"),a("code",[t._v("owner")]),t._v(" "),a("strong",[t._v("liukun")]),t._v(" "),a("a",{attrs:{href:"mailto:919590347@qq.com"}},[t._v("919590347@qq.com")])]),t._v(" "),a("li",[t._v("feat/*: 新功能, 新函数")]),t._v(" "),a("li",[t._v("fix/*: 修复函数的 bug （src/*）")]),t._v(" "),a("li",[t._v("docs/*: 仅修改文档相关（docs/*）")]),t._v(" "),a("li",[t._v("style/*: 代码风格层面改动, eg: 空格、分号、空行、引号……")]),t._v(" "),a("li",[t._v("refactor/*: 函数重构，既不是 bug 也不是 feature （src/*）")]),t._v(" "),a("li",[t._v("perf/*: 优化性能（src/*, build/*）")]),t._v(" "),a("li",[t._v("test/*: 测试用例的添加、修改、删除（src/_*.test.ts）")]),t._v(" "),a("li",[t._v("build/*: 构建层面修改。 egg：build/*, rollup, gulp……")]),t._v(" "),a("li",[t._v("ci/*: 自动化脚本相关。 eg: Travis, jenkins, gitlab.ci")]),t._v(" "),a("li",[t._v("chore/*: 其他的修改，不包含 src, test")]),t._v(" "),a("li",[t._v("revert/*: 回滚之前的 commit")])]),t._v(" "),a("h2",{attrs:{id:"创建分支、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建分支、函数"}},[t._v("#")]),t._v(" 创建分支、函数")]),t._v(" "),a("h3",{attrs:{id:"创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 迭代分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b feat/helloWorld\n")])])]),a("h3",{attrs:{id:"创建模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[t._v("#")]),t._v(" 创建模块")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("执行 npm 脚本，输入函数名，强制使用小驼峰（camelCase），例如: "),a("code",[t._v("helloWorld")]),t._v(";")]),t._v(" "),a("p",[t._v("如该函数不开放给使用者，请以下划线开头，例如: "),a("code",[t._v("_helloWorld")]),t._v(";")]),t._v(" "),a("p",[t._v("完成之后，可以看到新增了一个目录 "),a("strong",[t._v("src/helloWorld")]),t._v("，且该目录下有两个文件：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run create\n")])])]),a("p",[a("strong",[t._v("helloWorld.ts")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @description 总体的描述\n * @function helloWorld\n * @returns {number} 返回值的描述\n * @param {number} a - 参数a的描述\n * @throws {TypeError} 异常的描述\n * @author  xxx <xxx@xxx.com>\n * @example\n * helloWorld(1)  // returns 1\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("_helloWorld.test.ts")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" helloWorld "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./helloWorld'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("describe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloWorld 方法测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'具体测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"实现函数功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现函数功能"}},[t._v("#")]),t._v(" 实现函数功能")]),t._v(" "),a("p",[t._v("在 "),a("strong",[t._v("helloWorld.ts")]),t._v(" 文件中实现函数的相关功能")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("如有引入第三方的 "),a("code",[t._v("npm")]),t._v(" 包，请在 "),a("code",[t._v("rollup.config.ts")]),t._v(" 的 "),a("code",[t._v("external")]),t._v("中添加配置。注意，在"),a("code",[t._v("umd")]),t._v("与"),a("code",[t._v("iife")]),t._v("中还需要添加"),a("code",[t._v("globals")])])]),t._v(" "),a("h2",{attrs:{id:"编写单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写单元测试"}},[t._v("#")]),t._v(" 编写单元测试")]),t._v(" "),a("p",[t._v("在 "),a("strong",[t._v("_helloWorld.test.ts")]),t._v(" 文件中编写单元测试")]),t._v(" "),a("p",[t._v("函数库使用 "),a("strong",[a("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),a("OutboundLink")],1)]),t._v(" 作为单元测试框架，可参考 "),a("RouterLink",{attrs:{to:"/common/jest/"}},[t._v("Jest 介绍")])],1),t._v(" "),a("h2",{attrs:{id:"运行单元测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行单元测试"}},[t._v("#")]),t._v(" 运行单元测试")]),t._v(" "),a("p",[t._v("运行以下命令进行测试")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),a("p",[t._v("该命令会运行：单元测试、"),a("code",[t._v("eslint")]),t._v("，并且在控制台输出测试结果，生成单元测试覆盖率报告；")]),t._v(" "),a("p",[t._v("如果发生错误，请改正后再重新测试。此外，也可以使用 "),a("code",[t._v("watch")]),t._v(" 模式，在该模式下，如果文件内容发生改变，会自动触发测试；")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v("\n")])])]),a("p",[a("code",[t._v("watch")]),t._v(" 模式默认运行所有的单元测试，也可以根据需求自定义")]),t._v(" "),a("ul",[a("li",[t._v("输入 "),a("code",[t._v("p")]),t._v(" 只运行文件名符合匹配规则的单元测试")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("t")]),t._v(" 只运行"),a("code",[t._v("test name")]),t._v("符合匹配规则的单元测试")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("f")]),t._v(" 只运行测试失败的单元测试")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("o")]),t._v(" 只运行文件发生改动的单元测试")])]),t._v(" "),a("p",[t._v("此外，"),a("code",[t._v("watch")]),t._v(" 模式还支持其他功能")]),t._v(" "),a("ul",[a("li",[t._v("输入 "),a("code",[t._v("F")]),t._v(" 修复 EsLint")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("回车键")]),t._v(" 触发运行一次单元测试")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("q")]),t._v(" 退出 "),a("code",[t._v("watch")]),t._v(" 模式")])]),t._v(" "),a("h2",{attrs:{id:"完善注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完善注释"}},[t._v("#")]),t._v(" 完善注释")]),t._v(" "),a("p",[t._v("在 "),a("strong",[t._v("helloWorld.ts")]),t._v(" 文件中完善注释，用于自动生成文档；我们使用 jsdoc 的规范来写注释，然后利用 jsdoc-to-markdown 把注释生成 markdown 文档")]),t._v(" "),a("p",[t._v("默认的注释如下，改成正确的内容即可，"),a("RouterLink",{attrs:{to:"/common/code-commenting/"}},[t._v("如何写注释")])],1),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @description 总体的描述\n * @function helloWorld\n * @returns {number} 返回值的描述\n * @param {number} a - 参数a的描述\n * @throws {TypeError} 异常的描述\n * @author  xxx <xxx@xxx.com>\n * @example\n * helloWorld(1)  // returns 1\n */")]),t._v("\n")])])]),a("p",[t._v("运行 npm 命令来查看文档：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run changelog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:docs\n")])])]),a("h2",{attrs:{id:"提交代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交代码"}},[t._v("#")]),t._v(" 提交代码")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("commit 规范: 采用 angular 风格, 借助 commitizen 进行交互式提交、commitlint 进行消息格式的校验；")])]),t._v(" "),a("h3",{attrs:{id:"commitizen-命令行交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-命令行交互"}},[t._v("#")]),t._v(" commitizen 命令行交互")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# global")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i conventional-changelog-cli -g\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cz\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i conventional-changelog-cli -D\nnpx git-cz\n")])])]),a("h3",{attrs:{id:"commitlint-校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitlint-校验"}},[t._v("#")]),t._v(" commitlint 校验")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("commit 格式如下(第一行必填, 其他行选填), 其中 type 代表的是修改内容的类型(必须使用指定的值)、scope 代表影响范围(根据项目自定义)、")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("type(scope): 简单描述\n\n- 详细描述一\n- 详情描述二\n\nBREAKING CHANGE: 类似 angular-v2 的断层式升级 #1 (只有 type=feat、fix 时才包含)\n\nfix #1, fix #2\n")])])]),a("h4",{attrs:{id:"type-取值列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-取值列表"}},[t._v("#")]),t._v(" type 取值列表")]),t._v(" "),a("blockquote",[a("p",[t._v("分支策略完全相同")])]),t._v(" "),a("ul",[a("li",[t._v("feat: 新功能, 新函数")]),t._v(" "),a("li",[t._v("fix: 修复函数的 bug （src/*）")]),t._v(" "),a("li",[t._v("docs: 仅修改文档相关（docs/*）")]),t._v(" "),a("li",[t._v("style: 代码风格层面改动, eg: 空格、分号、空行、引号……")]),t._v(" "),a("li",[t._v("refactor: 函数重构，既不是 bug 也不是 feature （src/*）")]),t._v(" "),a("li",[t._v("perf: 优化性能（src/*, build/*）")]),t._v(" "),a("li",[t._v("test: 测试用例的添加、修改、删除（src/_*.test.ts）")]),t._v(" "),a("li",[t._v("build: 构建层面修改。 egg：build/*, rollup, gulp……")]),t._v(" "),a("li",[t._v("ci: 自动化脚本相关。 eg: Travis, jenkins, gitlab.ci")]),t._v(" "),a("li",[t._v("chore: 其他的修改，不包含 src, test")]),t._v(" "),a("li",[t._v("revert: 回滚之前的 commit")])]),t._v(" "),a("h4",{attrs:{id:"scope-建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-建议"}},[t._v("#")]),t._v(" scope 建议")]),t._v(" "),a("ul",[a("li",[t._v("修改的函数名")]),t._v(" "),a("li",[t._v("待补充")])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("git commit")]),t._v(" 提交成功后，请推到远程仓库，并发起 "),a("strong",[t._v("MR")]),t._v("。")]),t._v(" "),a("p",[t._v("一般情况下，一个分支只允许有 "),a("strong",[t._v("一个 commit")]),t._v("，除非有多个不相关的内容时，才允许有多个。")]),t._v(" "),a("p",[t._v("在创建 "),a("strong",[t._v("MR")]),t._v(" 的时候，有一个"),a("strong",[t._v("Squash commits")]),t._v("选项：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.winbaoxian.com/autoUpload/common/WechatIMG264_6b50cebfcaa8deb.png",alt:"img",title:":size=600"}})]),t._v(" "),a("p",[a("span",{staticStyle:{color:"red"}},[t._v("请不要勾选该选项；")])]),t._v(" "),a("p",[t._v("因为我们使用了 "),a("code",[t._v("commitizen")]),t._v(" 来对 "),a("strong",[t._v("commit message")]),t._v(" 做了严格的校验；如果勾选"),a("strong",[t._v("Squash commits")]),t._v("，\n那么当 "),a("strong",[t._v("MR")]),t._v(" 中有多个 "),a("strong",[t._v("commit")]),t._v(" 时，最终合并成的 "),a("strong",[t._v("commit message")]),t._v(" 会默认使用 "),a("strong",[t._v("MR")]),t._v(" 的 "),a("code",[t._v("title")]),t._v("，\n从而导致 "),a("strong",[t._v("commit message")]),t._v(" 发生改变，变得不符合 "),a("code",[t._v("commitizen")]),t._v(" 的要求。")]),t._v(" "),a("p",[t._v("因此，如果需要合并多个"),a("strong",[t._v("commit")]),t._v("，可以使用 "),a("code",[t._v("git rebase")]),t._v(" 来进行合并，合并完成后再 push 到远程相关分支。")]),t._v(" "),a("p",[a("strong",[t._v("MR")]),t._v("创建完成后，审核人员会对代码进行审核，如果有需要修改、优化的地方，需要开发人员进行处理；")]),t._v(" "),a("h2",{attrs:{id:"完成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成"}},[t._v("#")]),t._v(" 完成")]),t._v(" "),a("p",[t._v("审核人员审核通过后，会处理"),a("strong",[t._v("PR")]),t._v("，合并成功后，整个开发流程就此结束。")]),t._v(" "),a("h2",{attrs:{id:"发版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发版"}},[t._v("#")]),t._v(" 发版")]),t._v(" "),a("p",[t._v("通过 npm scripts, 执行自动化版本变更，然后申请 pr，pr 通过后，切换到 master，执行"),a("code",[t._v("npm run pushtag")]),t._v("推送 tag 至远程，travis 会自动化发版，发版成功后会收到邮件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run alpha "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内部测试版,一般不向外部发布,会有很多Bug.一般只有测试人员使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run beta "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 公测版，消除了严重bug，这个阶段的版本会一直加入新的功能。在Alpha版之后推出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run rc "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统平台上就是发行候选版本。RC版不会再加入新的功能了，主要着重于除错。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run patch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 补丁，当做了向下兼容的问题修正")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run minor "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新增功能，当做了向下兼容的功能性新增")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run major "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 断层更新，当做了不兼容的 API 修改")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);